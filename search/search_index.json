{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Portfolio","text":"Portfolio"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2025/01/15/i-ditched-the-algorithm-for-rssand-you-should-too/","title":"I Ditched the Algorithm for RSS\u2014and You Should Too","text":"<p>I waste too much time scrolling through social media.  It's bad for my health, so why do I keep doing it?  </p> <p>Because once in a while, I'll find a post so good that it teaches me something I never knew before, and all the scrolling feels worth it. But I've stumbled upon an old piece of free and open source tech, relatively unknown today, which is THE solution of solving the problems with modern media without sacrificing accessible, good content: RSS. </p> <p>Reddit, Facebook, Twitter \u2014 platforms built for engagement, not efficiency. Instead of showing you high-quality posts upfront, they pad your feed with memes, spam, and astroturfing. There is only so much 'good' content created in a day. By padding your feed with trash, they make the limited amount of good posts \"last longer\".  These sites want you to spend more time scrolling on their website, so they feed you scraps which makes the occasional great post feels like a jackpot. This concept, operant conditioning, was developed by B.F. Skinner \u2014 Yes, the mind behind the Skinnerbox.</p> <p>While some sites offer filtering or sorting options, manually settings these options every time you want to access a subreddit is just not doable.  </p> <p>You could, of course, stop consuming content from these websites. However, this would mean potentially missing really good content; content you'd learn from, interesting ideas, and more. But it doesn't have to be this way. You can reclaim your attention span while still having access to the same quality content as before.  </p> <p>Enter:</p>"},{"location":"blog/2025/01/15/i-ditched-the-algorithm-for-rssand-you-should-too/#rss","title":"RSS","text":"<p>RSS is like your youtube subscription feed in hyperdrive. Subscribe to sites you love and decide what shows up \u2014 no exploitative social media algorithm needed. No more ads or algorithms deciding how to keep you doomscrolling. This 1999 tech actually solves a lot of 2025 problems. Here's the kicker: Most websites, even social media, quietly support RSS feeds.</p> <p>You can filter out keywords, set minimum upvotes or like counts, and much more! Modern RSS clients allow you to make filters using Regex, and there are a lot of software and services you can use to tune up your filtering to 11.</p> <p>TL;DR: Never see noise, and never miss hidden gems again!</p> <p>But how do you get started with RSS? It's easier than you think!</p>"},{"location":"blog/2025/01/15/i-ditched-the-algorithm-for-rssand-you-should-too/#setup","title":"Setup","text":"<p>I personally self-host an open source RSS reader: Tiny Tiny RSS If you don't want to host it yourself, you can google for companies offering easy and accessible RSS readers.</p> <p>To make it easier, let's differentiate between three levels of ease when it comes to adding a website to RSS: Easy, medium, and hard. I'll be going over how to add several popular sites to your feed.</p>"},{"location":"blog/2025/01/15/i-ditched-the-algorithm-for-rssand-you-should-too/#easy-1-youtube","title":"Easy 1: Youtube","text":"<p>Want a youtube channel in your RSS feed? Just copy the channel's URL and subscribe to it in your reader. Done.</p>"},{"location":"blog/2025/01/15/i-ditched-the-algorithm-for-rssand-you-should-too/#easy-2-ign","title":"Easy 2: IGN","text":"<p>If you like games, you might want to subscribe to IGN. There's no clear RSS button, so the best course of action would be to google \"IGN RSS\".</p> <p>This leads to a nice IGN RSS Feeds page with multiple categorized feeds for you to pick from. If you wanted to subscribe to \"Game Articles\", you'd right-click on the game articles link, press \"copy link\", go to your RSS reader of choice and subscribe to the link you copied.  </p> <p>Now all IGN Game Articles will show up in your RSS feed as they are published!</p> <p>Tip</p> <p>Some websites don't have a dedicated RSS button, but still support RSS. You can discover their RSS urls by adding .rss, atom.xml, feed, etc. at the end of the site's URL, for example <code>https://website.com/atom.xml</code>. Almost all RSS readers support Atom feeds. For more examples, check this Reddit comment.</p>"},{"location":"blog/2025/01/15/i-ditched-the-algorithm-for-rssand-you-should-too/#medium-1-hackernews","title":"Medium 1: HackerNews","text":"<p>Some sites like HackerNews have RSS support. However, this RSS can be extremely limited if you want to filter posts so your feed isn't spammed by low effort content. Some people are nice enough to set up a \"middleman\" between your RSS feed and the website, so you can pull the RSS feed through the middleman while doing actions like filtering it.</p> <p>For example, if you wanted to subscribe to HackerNews but filter out low upvote count posts, you could subscribe to HNRSS instead of through HN directly. For example, I filter out posts below 150 upvotes by to this url: <code>https://hnrss.org/newest?points=150</code> Sometimes these services open-source their code so you can self-host the 'middleman'.</p>"},{"location":"blog/2025/01/15/i-ditched-the-algorithm-for-rssand-you-should-too/#medium-2-reddit","title":"Medium 2: Reddit","text":"<p>Warning</p> <p>When removing the optional search term from a reddit search URL, don't forget to remove the <code>+</code> When removing the sort options If adding more search terms, add a + between them!</p> <p>I love managing my homelab. I follow /r/homelab. Some posts are really good and teach me a lot. However, there's a lot of noise posted to that subreddit; I do not want to see memes, and pictures of people's hardware setup gets boring quick. I'm interested in hidden gems, threads where a lot of interesting info is explained, things I can really learn a lot from.</p>"},{"location":"blog/2025/01/15/i-ditched-the-algorithm-for-rssand-you-should-too/#step-1-filter-out-picture-posts","title":"Step 1: Filter out picture posts.","text":"<p>Reddit hack: Filter out picture posts by searching for 'self:true' in a subreddit. Bonus: You can subscribe to that specific search query as a RSS feed for text posts only.</p> <p>So instead of subscribing to a subreddit's RSS directly, you do a search for posts in that subreddit and then subscribe to that RSS feed. The RSS link you should subscribe to should look someting like this: <code>https://www.reddit.com/r/homelab/search.rss?q=self%3Atrue&amp;restrict_sr=on</code> You can change 'homelab' to your subreddit of choice.</p> <p>Note</p> <p>The <code>restrict_sr=on</code> parameter in the URL (probably) means \"Restrict_subreddit\". Removing this from the search will yield results from different subreddits than the one you're searching in. If you think that parameter is redundant, I agree.</p> <p>There are a lot of text-only submissions on /r/homelab. Gems are relatively sparce. Lots of low quality content. It's not the subreddit's fault; this is standard across Reddit.</p>"},{"location":"blog/2025/01/15/i-ditched-the-algorithm-for-rssand-you-should-too/#step-2-filter-for-quality","title":"Step 2: Filter for quality","text":"<p>Seems easy; let's add a 'minimal upvotes' query to the search, right? Sadly, Reddit doesn't support that.. a shame, really. However, a workaround is sorting by 'Top' and asking the search to show us the 'top posts of this week'. Note: 'This week' would mean 'past 7 days' instead of 'posted this week'.</p> <p>Filtering by 'Top of ...' always returns 25 items. This means that if you sort by 'top of this week', on average of 25/7=3,57 NEW posts get added to your feed each day! This is a great way to only see the highest scoring posts of each day.</p> <p>Adding this sort on top of the RSS feed from step 1 results in an URL like this: <code>https://www.reddit.com/r/homelab/search.rss?q=self%3Atrue&amp;restrict_sr=on&amp;sort=top&amp;t=year</code></p> <p>Bug</p> <p>If you don't care about only seeing text posts, removing <code>self%3Atrue</code> does NOT work for RSS feeds, even though it does work for direct searches. Instead, subscribe to the subreddit's \"top\" RSS and filter by time. For example: <code>https://www.reddit.com/r/homelab/top.rss?t=month</code></p> <p>For reference, here is how many posts you would get in your RSS feed, depening on your reddit sorting:</p> <p>And just like that, we converted a high-noise subreddit to an RSS feed which only gives us the best the subreddit has to offer.</p> <p>Tip</p> <p>If you wanted to subscribe to all new posts in a subreddit, you would subscribe to an url like <code>https://www.reddit.com/r/SUBREDDIT_NAME/new/.rss?sort=new</code>. For a more extensive Reddit RSS guide, see this post</p>"},{"location":"blog/2025/01/15/i-ditched-the-algorithm-for-rssand-you-should-too/#hard","title":"Hard:","text":"<p>Some sites might not have support for an RSS feed. Sometimes you can get away with a neat google trick:</p> <p>Most of the time you'd need something to generate the RSS for you. You could use one of many RSS feed generators available online, or host one yourself. Most of these feed generators have enhanced filtering tools as well.</p> <p>I haven't had to do this yet, however I've heard really good things about the open source RSS-Bridge</p> <p>How you'd set up a feed generator depends on the software, so I won't expand upon that here.</p>"},{"location":"blog/2025/01/15/i-ditched-the-algorithm-for-rssand-you-should-too/#conclusion","title":"Conclusion","text":"<p>Separating yourself from the algorithmic whims of social media platform is easier than ever. With RSS, you can stay informed, save time, and never miss the content that truly matters.</p> <p>This blog also has an RSS feed!</p> <p>To end this post, here is a list of (RSS supported) sites I think are really interesting. Linked are excellent articles for first-time readers!</p> <ul> <li>Nicky Case's blog &amp; New Stuff - Really cool interactive explanations!</li> <li>Julia Evans - In-depth tech blog</li> <li>Kevin Fang - In-depth incident analysis</li> <li>Explaining Software Design</li> <li>Hacker News - General tech news feed  </li> </ul>"},{"location":"projects/TF2CTS/","title":"TF2 Chat Text to Speech","text":"[Console Application] TF2 Chat To Speech <p>You can view TF2 Chat To Speech on GitHub</p> <p>   TF2 Chat To Speech is a .NET framework application which reads the in-game text chat of a game called Team Fortress 2 and outputs it into the in-game voice chat. TF2CTS supports commands which users can write in-game in order for them to switch the speaker's voice and rate of speech. </p> <p>   Some of the things I did: </p> <ul> <li>Designed the overall system couplings &amp; data passthrough (Videogame -&gt; Text file -&gt; Program -&gt; TTS -&gt; audio device -&gt; videogame) </li> <li>Implemented file reading whilst file is in-use</li> <li>Implemented text-filtering system</li> <li>Implemented text-command system (Chat messages could contain strings which edit the speed or voice of the text-to-speech bot)</li> <li> Implemented converting text to audio by using the NAudio framework and using text- and audiostreams</li> </ul> <p>The following tools and languages were used in this project:</p> <ul> <li>C#</li> <li>.NET Framework</li> <li>NAudio Library</li> </ul>"},{"location":"projects/blowupthesun/","title":"Blow Up The Sun","text":"[Gamejam] Blow Up The Sun Blow up the sun!! by Jojo <p>In Blow Up The Sun, the player has to colonize the planets in their solar system to harvest resources, so they can research more technologies and eventually Blow Up The Sun.</p> <p>Blow Up The Sun is a game made in 48 hours Kenney Jam 24, developed by 1 person. The Jam limited participants to only use asset packs created by Kenney, the gamejam host.</p> <p>I developed BUTS as a proof-of-concept for a potential full game.</p> <p></p>"},{"location":"projects/discordmulticlientlauncher/","title":"Discord Multiclient Launcher","text":"[Powershell Script] Discord Multiclient Launcher <p>A Powershell script to lauch multiple discord clients, with the ability to log into each client with a different account.</p> Visit the github repo here. <p>I had a problem: I wanted to launch multiple instances of the chat app Discord, each with a different account logged in.  Launching the chat application multiple times automatically logged you into your already logged-in discord account. Logging out of one of the clients logged you out of all. There is a solution. Namely, going into Discord's install directory.  For example, <code>\\AppData\\Local\\Discord\\app-0.0.309\\Discord.exe</code>.  This login problem is solved by making a 'shortcut' of this EXE and adding <code>--multi-instance</code> in the <code>Target:</code> property of the shortcut (This solution was suggested on reddit)</p> <p>New problem: As you can see, the URL to the discord.exe example above includes the version number <code>app-0.0.309</code>! This means that every time discord is updated, the above process needs to be repeated. A new shortcut for a new .exe has to be created, etc.</p> <p>This project is a powershell script which automatically determines the highest discord version installed (There can be multiple installed at one time) and starts the appropriate .exe with the <code>--multi-instance</code> flag, so the user never has to manually follow the above process again; The user only has to download the .exe version of the script and execute it.</p> <p>This project was written in Powershell.</p> <p></p>"},{"location":"projects/indiehorrorgameplotgenerator/","title":"Indie Horror Game Plot Generator","text":"[Website] Indie Horror Game Plot Generator <p>A static website made as a parody for low-quality indie horror games.</p> <p>Visit the generator here.</p> <p>You can view the site's source code on Github</p> <p></p>"},{"location":"projects/machinelearningsnake/","title":"Machine Learning Snake","text":"[Machine learning prototype] Snake AI Reinforcement Learning Interactable Explanation by Joey <p>You can view the Machine Learning snake project's source code on GitHub</p> <p>   Snake AI was a solo project made for Zuyd University of Applied Sciences to display the capabilities of Machine Learning in Unity. </p> <p>The following tools and languages were used in this project:</p> <ul> <li>C#</li> <li>Unity</li> <li>Unity ML-Agent</li> <li>Machine Learning</li> </ul>"},{"location":"projects/recipewebsite/","title":"Recipe website","text":"[Website] Recipes <p>A website created to hold a collection of my recipes.</p> <p>Visit the website here.</p> <p>You can check out the source code for the site on Github.</p> <p>Created from scratch with the static site generator Jekyll, using Jina2. </p> <p></p>"},{"location":"projects/samuraishampoo/","title":"Samurai Shampoo","text":"[Videogame] Samurai Shampoo <p>   Samurai Shampoo is a melee-based roguelike dungeon crawler videogame where a fallen samurai must retrieve his stolen Shampoo. It was awarded second place overall game in the \"Winnovation best-overall game\" category.</p> <p>As of writing, Samurai Shampoo has had over 20.000 unique players, over 170 steam reviews, and approval for Nintendo Switch development.</p> <p>Samurai Shampoo was originally created by 6 people in 10 weeks. Post-launch it was developed further by 2 people, including me. </p> <p>   Some of my contributions post-launch: </p> <ul> <li>Redesigned all menus and UI elements to be more polished;</li> <li>Set up several playtests and collected player feedback on new systems and features</li> <li>Balanced several systems and items (Like 'chest room' spawn rates and potion statistics) as a response to player feedback; </li> <li>Developed a playable mobile version of samurai shampoo (unpublished)</li> <li>Improved Steam Store page. Improved screenshots and trailer, hired freelancer for capsule(s).</li> </ul> <p>   Some of my contributions during the initial development of Samurai Shampoo: </p> <ul> <li>Designed and implemented core systems like; the Entity-Component system, State machines and states, \"Health point\" system, Sound system, and luck system</li> <li>Researched best implementations of UI/UX (User Interface / User Experience, including 'game feel')</li> <li>Designed UI/UX and implemented them</li> <li>Tested implementations of UI/UX through playtesting</li> <li>showed leadership and mediator skills through steering the project when needed, making quick decisions when necessary, and mediate in the project group when needed </li> <li>Was pro-active by actively communicating with outsiders (Reviewers, judges, etc) and taking responsibility of multiple parts of the project.</li> <li>Designed and published the Steam Store page. </li> </ul> <p></p> <p>Samurai Shampoo was made using C# in Unity.</p>"},{"location":"projects/vrthesis/","title":"Virtual Reality introduction thesis","text":"[Bachelor Thesis] Virtual Reality introduction tutorial <p>You can view the thesis and tutorial by clicking the following links:</p> Demo video Thesis (in Dutch) <p>   The VR tutorial was a thesis project to teach people with a lack of technical backgrounds how to use Virtual Reality. </p> <p>   Some of the things I did: </p> <ul> <li>Desiging and implementing an XR-framework for the client, based on the cutting edge Unity XR Interaction Toolkit 2.0</li> <li>Desiging and implementing the VR Tutorial level in the Unity Engine </li> <li>Researched the level of intuitiveness in similar games and how to create an intuitive tutorial </li> <li>Executed playtests to test the intuitiveness of the tutorial with the target audience </li> </ul> <p>   For the complete picture, see the \"Thesis\" button at the top of this page. </p> <p>The VR tutorial graduation thesis was completed in 20 weeks for a serious game company.</p> <p>The following tools and languages were used in this project:</p> <ul> <li>C#</li> <li>Unity Engine</li> <li>Virtual Reality / Unity XR Interaction Toolkit 2.0</li> <li>Oculus Quest 2</li> </ul>"},{"location":"blog/archive/2025/","title":"January 2025","text":""},{"location":"blog/category/general-technology/","title":"General Technology","text":""}]}